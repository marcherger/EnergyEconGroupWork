filter(ref_area %in% unlist(base_years[as.character(time)])) %>%
mutate(Hours_worked = obs_value * 52) %>%
ungroup() %>%
select(ref_area, time, Hours_worked)
result_df <- df_HOW %>%
filter(time %in% as.numeric(names(base_years))) %>%
group_by(time, ref_area) %>%
filter(ref_area %in% unlist(base_years[as.character(time)])) %>%
mutate(hours_worked = obs_value * 52) %>%
ungroup() %>%
select(ref_area, time, hours_worked)
### Store employment rate per year for each country---------------------------------------
result_df <- df_EAP %>%
filter(time %in% as.numeric(names(base_years))) %>%
group_by(time, ref_area) %>%
filter(ref_area %in% unlist(base_years[as.character(time)])) %>%
mutate(employment_rate = obs_value) %>%
ungroup() %>%
select(ref_area, time, employment_rate)
### Calculate hours worked per year for each country---------------------------------------
result_df <- df_HOW %>%
filter(time %in% as.numeric(names(base_years))) %>%
group_by(time, ref_area) %>%
filter(ref_area %in% unlist(base_years[as.character(time)])) %>%
mutate(hours_worked = obs_value * 52) %>%
ungroup() %>%
select(ref_area, time, hours_worked)
### Store employment rate per year for each country---------------------------------------
result_df <- result_df %>%
df_EAP %>%
filter(time %in% as.numeric(names(base_years))) %>%
group_by(time, ref_area) %>%
filter(ref_area %in% unlist(base_years[as.character(time)])) %>%
mutate(employment_rate = obs_value) %>%
ungroup() %>%
select(ref_area, time, employment_rate)
### Store employment rate per year for each country---------------------------------------
result_df <- result_df %>%
left_join(df_EAP %>%
filter(ref_area %in% ref_area_set,
sex %in% sex_set,
classif1 %in% classif1_EAP_set,
time >= timefrom_set,
time <= timeto_set) %>%
select(ref_area, time, obs_value),
by = c("ref_area", "time")) %>%
mutate(employment_rate = obs_value)
result_df_HOW <- df_HOW %>%
filter(time %in% as.numeric(names(base_years))) %>%
group_by(time, ref_area) %>%
filter(ref_area %in% unlist(base_years[as.character(time)])) %>%
mutate(hours_worked = obs_value * 52) %>%
ungroup() %>%
select(ref_area, time, hours_worked)
View(result_df_HOW)
### Store employment rate per year for each country---------------------------------------
result_df <- result_df %>%
left_join(df_EAP %>%
filter(time %in% as.numeric(names(base_years))) %>%
group_by(time, ref_area) %>%
filter(ref_area %in% unlist(base_years[as.character(time)])) %>%
mutate(employment_rate = obs_value * 52) %>%
ungroup() %>%
select(ref_area, time, employment_rate),
by = c("ref_area", "time")) %>%
mutate(employment_rate = employment_rate)
View(result_df)
### Store employment rate per year for each country---------------------------------------
result_df <- result_df %>%
left_join(df_EAP %>%
filter(time %in% as.numeric(names(base_years))) %>%
group_by(time, ref_area) %>%
filter(ref_area %in% unlist(base_years[as.character(time)])) %>%
mutate(employment_rate = obs_value * 52) %>%
ungroup() %>%
select(ref_area, time, employment_rate),
by = c("ref_area")) %>%
mutate(employment_rate = employment_rate)
### Store employment rate per year for each country---------------------------------------
result_df <- result_df %>%
left_join(df_EAP %>%
filter(time %in% as.numeric(names(base_years))) %>%
group_by(time, ref_area) %>%
filter(ref_area %in% unlist(base_years[as.character(time)])) %>%
mutate(employment_rate = obs_value) %>%
ungroup() %>%
select(ref_area, time, employment_rate),
by = c("ref_area", "time"))
result_df <- result_df %>%
left_join(df_EAP %>%
filter(time %in% as.numeric(names(base_years)),
ref_area %in% unlist(base_years[as.character(time)])) %>%
select(ref_area, time, employment_rate = obs_value),
by = c("ref_area", "time"))
rm(result_df)
rm(result_df_HOW)
### Calculate hours worked per year for each country---------------------------------------
result_df <- df_HOW %>%
filter(time %in% as.numeric(names(base_years))) %>%
group_by(time, ref_area) %>%
filter(ref_area %in% unlist(base_years[as.character(time)])) %>%
mutate(hours_worked = obs_value * 52) %>%
ungroup() %>%
select(ref_area, time, hours_worked)
View(result_df)
### Store employment rate per year for each country---------------------------------------
result_df <- result_df %>%
left_join(df_EAP %>%
filter(time %in% as.numeric(names(base_years)),
ref_area %in% unlist(base_years[as.character(time)])) %>%
select(ref_area, time, employment_rate = obs_value),
by = c("ref_area", "time"))
# Hours/per L0_i----------------------------------------------------------------
## Individual countries--------------------------------------------------------------------
result_df <- result_df %>%
mutate(Hours/L0_i = hours_worked * (employment_rate/100))
# Hours/per L0_i----------------------------------------------------------------
## Individual countries--------------------------------------------------------------------
result_df <- result_df %>%
mutate(hours_per_L0_i = hours_worked * (employment_rate/100))
# L0_i----------------------------------------------------------------
## Individual countries--------------------------------------------------------------------
result_df <- result_df %>%
mutate(L0_i = hours_per_L0_i * hours_available)
# L0_i----------------------------------------------------------------
## Individual countries--------------------------------------------------------------------
result_df <- result_df %>%
mutate(L0_i = hours_per_L0_i / hours_available)
# Store dataframe as Excel spreadsheet-----------------------------------------------
write_xlsx(result_df, "C:\\Users\\mpher\\Dropbox\\Climate Labor Disutility\\Update_2023\\COMET Calibration\\COMET Labor Baseline L0\\L0_Labor_Supply_Selected_Countries.xlsx")
# Store dataframe as Excel spreadsheet-----------------------------------------------
write_xlsx(result_df, "C:\\Users\\mpher\\Dropbox\\Climate Labor Disutility\\Update_2023\\COMET Calibration\\COMET Labor Baseline L0\\Marc\\L0_Labor_Supply_Selected_Countries.xlsx")
source("C:/Users/mpher/Dropbox/Climate Labor Disutility/Update_2023/COMET Calibration/COMET Labor Baseline L0/Marc/L0_Labor_Supply_ILOSTAT_Selected_Countries.R", echo=TRUE)
View(df_HOW)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Albania', 'Annual'),
fixed = FALSE)
View(toc)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Andorra', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Austria', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('4.	Azerbaijan ', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Azerbaijan ', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Belarus  ', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Belgium  ', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Belgium  ', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Belgium', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Belarus', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Azerbaijan', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Bosnia', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('8.	Bulgaria', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Bulgaria', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Cyprus', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Czech', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Denmark', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Estonia', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Finland', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('France', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Germany', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Georgia', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Greece', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Hungary', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Iceland', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Ireland', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Italy', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Latvia', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Liechtenstein', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Lithuania', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Luxembourg', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Malta', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Moldova', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Monaco', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Montenegro', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Netherlands', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Macedonia', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Norway ', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Norway', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Poland', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Portugal', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Romania', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Russia', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Marino', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Serbia', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Slovakia', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Slovenia', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Spain', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Sweden', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Switzerland', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Turkey', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Turkey', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Ukraine', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Kingdom', 'Annual'),
fixed = FALSE)
# Search data----------------------------------------------------------------------------
toc <- get_ilostat_toc(segment = 'ref_area',
search = c('Vatican', 'Annual'),
fixed = FALSE)
df_HOW_Europe <- get_ilostat(id = 'HOW_TEMP_SEX_ECO_NB_A', time_format = 'num', filters = list(
### Download Data--------------------------------------------------------------------------
df_HOW_Europe <- get_ilostat(id = 'HOW_TEMP_SEX_ECO_NB_A', time_format = 'num', filters = list(
sex = sex_set,
classif1 = classif1_HOW_set,
timefrom = timefrom_set, timeto = timeto_set))
# Europe----------------------------------------------------------------------
## Country filters------------------------------------------------------------------------
# Choose European countries
ref_area_Europe <- c('ALB','AND')
# Europe----------------------------------------------------------------------
## Country filters------------------------------------------------------------------------
# Choose European countries
ref_area_Europe <- c('ALB','AND')
### Download Data--------------------------------------------------------------------------
df_HOW_Europe <- get_ilostat(id = 'HOW_TEMP_SEX_ECO_NB_A', time_format = 'num', filters = list(
ref_area = ref_area_Europe,
sex = sex_set,
classif1 = classif1_HOW_set,
timefrom = timefrom_set, timeto = timeto_set))
View(df_HOW_Europe)
# Europe----------------------------------------------------------------------
## Country filters------------------------------------------------------------------------
# Choose European countries
ref_area_Europe <- c('AND')
### Download Data--------------------------------------------------------------------------
df_HOW_Europe <- get_ilostat(id = 'HOW_TEMP_SEX_ECO_NB_A', time_format = 'num', filters = list(
ref_area = ref_area_Europe,
sex = sex_set,
classif1 = classif1_HOW_set,
timefrom = timefrom_set, timeto = timeto_set))
View(df_HOW_Europe)
# Europe----------------------------------------------------------------------
## Country filters------------------------------------------------------------------------
# Choose European countries
ref_area_Europe <- c('AUT', 'AZE', 'BLR', 'BEL', 'BIH', 'BGR', 'CYP', 'CZE', 'DNK', 'EST',
'FIN', 'FRA', 'DEU', 'GEO', 'GRC', 'HUN', 'ISL', 'IRL', 'ITA', 'LVA',
'LIE', 'LTU', 'LUX', 'MLT', 'MDA', 'MCO', 'MNE', 'NLD', 'MKD', 'NOR',
'POL', 'PRT', 'ROU', 'RUS', 'SMR', 'SRB', 'SVK', 'SVN', 'ESP', 'SWE',
'CHE', 'UKR', 'GBR', 'ALB', 'AND')
### Download Data--------------------------------------------------------------------------
df_HOW_Europe <- get_ilostat(id = 'HOW_TEMP_SEX_ECO_NB_A', time_format = 'num', filters = list(
ref_area = ref_area_Europe,
sex = sex_set,
classif1 = classif1_HOW_set,
timefrom = timefrom_set, timeto = timeto_set))
View(df_HOW_Europe)
summary(df_HOW_Europe)
unique(df_HOW_Europe$ref_area)
length(c("ALB", "AUT", "AZE", "BEL", "BGR", "BIH", "BLR", "CHE", "CYP", "CZE", "DEU", "DNK", "ESP", "EST", "FIN", "FRA", "GBR", "GEO", "GRC",
"HUN", "IRL", "ISL", "ITA", "LTU", "LUX", "LVA", "MDA", "MKD", "MLT", "MNE", "NLD", "NOR", "POL", "PRT", "ROU", "RUS", "SRB", "SVK",
"SVN", "SWE", "UKR"))
### Choose base year per country-----------------------------------------------------------
# Note: See process documentation for reasoning behind chosen base year
base_year_Europe <- '2019'
### Calculate hours_worked----------------------------------------------------------------
df_Europe <- df_HOW_Europe %>%
filter(time %in% as.numeric(ref_area_Europe)) %>%
group_by(time, ref_area_Europe) %>%
filter(ref_area %in% unlist(base_year_Europe[as.character(time)])) %>%
mutate(hours_worked = obs_value * 52) %>%
ungroup() %>%
select(ref_area, time, hours_worked)
### Calculate hours_worked----------------------------------------------------------------
df_Europe <- df_HOW_Europe %>%
filter(time %in% as.numeric(base_year_Europe)) %>%
group_by(time, ref_area_Europe) %>%
filter(ref_area %in% unlist(base_year_Europe[as.character(time)])) %>%
mutate(hours_worked = obs_value * 52) %>%
ungroup() %>%
select(ref_area, time, hours_worked)
df_Europe <- df_HOW_Europe %>%
filter(time %in% as.numeric(base_year_Europe)) %>%
group_by(time, ref_area) %>%
filter(ref_area %in% ref_area_Europe) %>%
mutate(hours_worked = obs_value * 52) %>%
ungroup() %>%
select(ref_area, time, hours_worked)
View(df_Europe)
### Calculate hours_worked----------------------------------------------------------------
df_Europe <- df_HOW_Europe %>%
filter(time %in% as.numeric(base_year_Europe)) %>%
group_by(time, ref_area) %>%
filter(ref_area %in% ref_area_Europe) %>%
mutate(hours_worked = obs_value * 52) %>%
ungroup() %>%
select(ref_area, time, hours_worked)
## Employment rate--------------------------------------------------------------------------
# Chosen indicator: Labour force participation rate by sex and age (%) -- Annual
# Indicator id: EAP_DWAP_SEX_AGE_RT_A
### Download Data--------------------------------------------------------------------------
df_EAP_Europe <- get_ilostat(id = 'EAP_DWAP_SEX_AGE_RT_A', time_format = 'num', filters = list(
ref_area = ref_area_Europe,
sex = sex_set,
classif1 = classif1_EAP_set,
timefrom = timefrom_set, timeto = timeto_set))
View(df_EAP_Europe)
### Store employment rate per year for each country---------------------------------------
df_Europe <- df_Europe %>%
left_join(df_EAP_Europe %>%
filter(time %in% as.numeric(names(base_year_Europe)),
ref_area %in% base_year_Europe) %>%
select(ref_area, time, employment_rate = obs_value),
by = c("ref_area", "time"))
View(df_Europe)
### Calculate hours_worked----------------------------------------------------------------
result_df_Europe <- df_HOW_Europe %>%
filter(time %in% as.numeric(base_year_Europe)) %>%
group_by(time, ref_area) %>%
filter(ref_area %in% ref_area_Europe) %>%
mutate(hours_worked = obs_value * 52) %>%
ungroup() %>%
select(ref_area, time, hours_worked)
View(result_df_Europe)
### Store employment rate per year for each country---------------------------------------
result_df_Europe <- result_df_Europe %>%
left_join(df_EAP_Europe %>%
filter(time %in% as.numeric(base_year_Europe),
ref_area %in% base_year_Europe) %>%
select(ref_area, time, employment_rate = obs_value),
by = c("ref_area", "time"))
rm(result_df_Europe)
### Store employment rate per year for each country---------------------------------------
result_df_Europe <- result_df_Europe %>%
left_join(df_EAP_Europe %>%
filter(time %in% as.numeric(base_year_Europe),
ref_area %in% ref_area_Europe) %>%
select(ref_area, time, employment_rate = obs_value),
by = c("ref_area", "time"))
### Calculate hours_worked----------------------------------------------------------------
result_df_Europe <- df_HOW_Europe %>%
filter(time %in% as.numeric(base_year_Europe)) %>%
group_by(time, ref_area) %>%
filter(ref_area %in% ref_area_Europe) %>%
mutate(hours_worked = obs_value * 52) %>%
ungroup() %>%
select(ref_area, time, hours_worked)
### Store employment rate per year for each country---------------------------------------
result_df_Europe <- result_df_Europe %>%
left_join(df_EAP_Europe %>%
filter(time %in% as.numeric(base_year_Europe),
ref_area %in% ref_area_Europe) %>%
select(ref_area, time, employment_rate = obs_value),
by = c("ref_area", "time"))
View(result_df_Europe)
## Hours/per L0_i----------------------------------------------------------------
result_df_Europe <- result_df_Europe %>%
mutate(hours_per_L0_i = hours_worked * (employment_rate/100))
## L0_i----------------------------------------------------------------
result_df_Europe <- result_df_Europe %>%
mutate(L0_i = hours_per_L0_i / hours_available)
# Store dataframes as Excel spreadsheet-----------------------------------------------
write_xlsx(result_df, "C:\\Users\\mpher\\Dropbox\\Climate Labor Disutility\\Update_2023\\COMET Calibration\\COMET Labor Baseline L0\\Marc\\L0_Labor_Supply_Selected_Countries.xlsx")
source("C:/Users/mpher/Dropbox/Climate Labor Disutility/Update_2023/COMET Calibration/COMET Labor Baseline L0/Marc/L0_Labor_Supply_ILOSTAT.R", echo=TRUE)
source("C:/Users/mpher/Dropbox/Climate Labor Disutility/Update_2023/COMET Calibration/COMET Labor Baseline L0/Marc/L0_Labor_Supply_ILOSTAT.R", echo=TRUE)
setwd("C:/Users/mpher/Documents/Uni/Master/02_Exchange/01_Academics/Energy Economics of the Green Transition/0_Final Project/EnergyEconGroupWork/DownloadDataForDK/RawData")
df <- read.csv('when2heat.csv')
